name: Build NeMo Curator container
on:
  # This script is called by "gpuci.yaml"
  # We specify a Git reference to checkout, defaulting to the SHA of the commit that triggered the workflow
  workflow_call:
    inputs:
      ref:
        description: Git ref to checkout
        default: ${{ github.sha }}
        required: false
        type: string

defaults:
  # Sets default options for executing shell commands in the workflow
  # `-x` enables debugging output
  # `-e` ensures that the workflow fails fast on errors
  # `-u` treats unset variables as errors
  # `-o pipefail` ensures that any failures in a pipeline are detected
  run:
    shell: bash -x -e -u -o pipefail {0}

jobs:
  main:
    # This is the tag on our Azure runner found in Actions -> Runners -> Self-hosted runners
    # It is designated for build jobs
    runs-on: self-hosted-azure-builder
    steps:
        # Checks out the repository code using the actions/checkout action,
        # storing it in a directory named after the unique workflow run ID
        # It checks out the specific commit or branch based on the input sha provided when the workflow is called
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ github.run_id }}
          ref: ${{ inputs.sha }}

        # Cleans up unused Docker resources that haven't been used in the last 24 hours
      - name: Clean runner cache
        run: |
          docker system prune --filter "until=24h" --force

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # We use `docker` driver as this speeds things up for
          # trivial (non-multi-stage) builds.
          driver: docker

        # Pull cached Docker images from a specified Azure Container Registry
        # It first attempts to pull an image with a tag based on the current PR number (if available) and defaults to buildcache if not
        # It then tries to pull the buildcache image regardless of the outcome of the previous command
        # The use of || true allows the workflow to continue even if one or both pull commands fail,
        # which ensures that the workflow can proceed without interruption
      - name: Pull cache images
        run: |
          docker pull nemoci.azurecr.io/nemo_curator_container:${{ github.event.pull_request.number || 'buildcache' }} || true
          docker pull nemoci.azurecr.io/nemo_curator_container:buildcache || true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          # Specifies the path to the Dockerfile to use for building the Docker image (located in the root of the repository)
          file: Dockerfile
          # The built image should be pushed to the container registry after it is successfully built
          push: true
          # Specifies build arguments that can be passed into the Dockerfile
          # `FORKED_REPO_URL` is the URL to the user's forked repository
          # `CURATOR_COMMIT` is the PR's head SHA if available; otherwise, it falls back to the current commit SHA
          build-args: |
            FORKED_REPO_URL=https://github.com/${{ github.event.pull_request.head.repo.full_name }}.git
            CURATOR_COMMIT=${{ github.event.pull_request.head.sha || github.sha }}
          # Specifies the images to use as cache sources during the build process
          cache-from: |
            nemoci.azurecr.io/nemo_curator_container:${{ github.event.pull_request.number || 'buildcache' }}
            nemoci.azurecr.io/nemo_curator_container:buildcache
          # Inline caching allows the cache to be available for future builds without needing to push it to a separate repository
          cache-to: type=inline
          # Specifies the tag under which the built image will be pushed to the container registry
          # Uses the "github.run_id" to ensure that each build has a unique tag
          tags: nemoci.azurecr.io/nemo_curator_container:${{ github.run_id }}

        # Updates the Docker image associated with a PR by tagging the built image with the PR number
        # and then pushing that tagged image to the Azure Container Registry
      - name: Update PR image
        if: github.event_name == 'pull_request'
        run: |
          docker tag nemoci.azurecr.io/nemo_curator_container:${{ github.run_id }} nemoci.azurecr.io/nemo_curator_container:${{ github.event.pull_request.number }}
          docker push nemoci.azurecr.io/nemo_curator_container:${{ github.event.pull_request.number }}

      - name: Update buildcache image
        # Only executes when there is a push to the main branch
        # Ensures that the build cache is updated only for stable versions of the codebase
        if: github.ref == 'refs/heads/main'
        # Updates the Docker image tagged as the build cache by:
        # 1. Tagging the built image from the current workflow run with the buildcache tag, and
        # 2. Pushing that tagged image to the Azure Container Registry
        run: |
          docker tag nemoci.azurecr.io/nemo_curator_container:${{ github.run_id }} nemoci.azurecr.io/nemo_curator_container:buildcache
          docker push nemoci.azurecr.io/nemo_curator_container:buildcache
