name: "GPU CI/CD"

on:
  push:
    branches:
      - main
      - "pull-request/[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
      changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR info
        id: get-pr-info
        if: startsWith(github.ref, 'refs/heads/pull-request/')
        uses: nv-gha-runners/get-pr-info@main

      - name: Determine base reference
        id: base-ref
        run: |
          if [[ "${{ github.ref }}" == refs/heads/pull-request/* ]]; then
            # For PR branches, use the base branch from PR info
            echo "base=${{ fromJSON(steps.get-pr-info.outputs.pr-info).base.ref }}" >> $GITHUB_OUTPUT
          else
            # For other branches, use the last commit
            echo "base=HEAD~1" >> $GITHUB_OUTPUT
          fi

      - name: Get changed files
        id: changed-files
        uses: step-security/changed-files@v45.0.1
        with:
          files: |
            nemo_curator/**
            config/**
            .github/**
            pyproject.toml
            Dockerfile
            tests/**
          base_sha: ${{ steps.base-ref.outputs.base }}

  # First, we build and push a NeMo Curator container
  build-container:
    uses: NVIDIA/NeMo-FW-CI-templates/.github/workflows/_build_container.yml@v0.29.0
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.any_changed == 'true' }}
    with:
      image-name: nemo_curator_container
      dockerfile: Dockerfile
      image-label: nemo-curator
      build-args: |
        IMAGE_LABEL=nemo-curator
        REPO_URL=https://github.com/${{ github.repository }}.git
        CURATOR_COMMIT=${{ github.sha }}
      prune-filter-timerange: 24h
      runner: linux-amd64-cpu8
      has-azure-credentials: true
      use-inline-cache: false
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # Then, we run our PyTests in the container we just built
  run-gpu-tests:
    needs: [build-container]
    if: ${{ needs.changed-files.outputs.any_changed == 'true' }}
    runs-on: linux-amd64-gpu-rtxa6000-latest-1
    environment: nemo-ci
    # Unit tests should not take longer than 40 minutes including docker pull and startup time
    timeout-minutes: 40
    env:
      DIR: ${{ github.run_id }}
    steps:
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure ACR Login
        run: |
          az acr login --name nemoci
          which docker

      - name: Checkout NeMo-Curator
        uses: actions/checkout@v4

      # If something went wrong during the last cleanup, this step ensures any existing container is removed
      - name: Remove existing container if it exists
        run: |
          if [ "$(docker ps -aq -f name=nemo-curator-container)" ]; then
              docker rm -f nemo-curator-container
          fi

        # This runs the container which was pushed by build-container, which we call "nemo-curator-container"
        # `--gpus all` ensures that all of the GPUs from our runner are available in the container
        # `bash -c "sleep infinity"` keeps the container running indefinitely without exiting
      - name: Run Docker container
        run: |
          docker run \
            --gpus all \
            --name nemo-curator-container \
            -d \
            --volume ${{ github.workspace }}:/opt/NeMo-Curator \
            nemoci.azurecr.io/nemo_curator_container:${{ github.run_id }} \
            bash -c "sleep infinity"

        # Expect `nvidia-smi` to show available GPUs
      - name: Check GPUs
        run: |
          whoami
          docker exec nemo-curator-container nvidia-smi

        # In the virtual environment (called "curator") we created in the container,
        # list all of our packages. Useful for debugging
      - name: Verify installations
        run: |
          docker exec nemo-curator-container pip list

        # In the virtual environment (called "curator") we created in the container,
        # run our PyTests marked with `@pytest.mark.gpu`
        # We specify the `rootdir` to help locate the "pyproject.toml" file (which is in the root directory of the repository),
        # and then the directory where the PyTests are located
      - name: Run PyTests with GPU mark
        id: coverage
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          docker exec -e HF_TOKEN=$HF_TOKEN nemo-curator-container bash -c '
            cd /opt/NeMo-Curator && \
            coverage run \
            --branch \
            --source=nemo_curator \
            --omit=nemo_curator/scripts/* \
            -m pytest -m gpu --rootdir /opt/NeMo-Curator tests && \
            cp .coverage ../
          '

          docker exec nemo-curator-container coverage xml

          mkdir -p $DIR
          docker cp nemo-curator-container:/opt/.coverage $DIR/.coverage
          docker cp nemo-curator-container:/opt/coverage.xml $DIR/coverage.xml
          coverage_report="codecov"
          echo "report=$coverage_report" | tee -a "$GITHUB_OUTPUT"

        # After running `docker stop`, the container remains in an exited state
        # It is still present on our system and could be restarted with `docker start`
        # Thus, we use `docker rm` to permanently removed it from the system
      - name: Cleanup
        if: always()
        run: |
          docker stop nemo-curator-container && docker rm nemo-curator-container

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: ${{ steps.coverage.outputs.report == 'codecov' }}
        with:
          name: ${{ github.run_id }}
          path: |
            ${{ github.run_id }}/coverage.xml
            ${{ github.run_id }}/.coverage
          include-hidden-files: true

  upload-coverage:
    runs-on: ubuntu-latest
    needs: [run-gpu-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download coverage reports of current branch
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_id }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          flags: gpu
