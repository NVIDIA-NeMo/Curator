documentation: |
  FLEURS
  ######
  This config can be used to prepare
  `FLEURS <https://huggingface.co/datasets/google/fleurs>`_
  dataset in the NeMo format.
  It produces manifest for dev split of armenian language.
  This config performs the following data processing.

  1. Downloads FLEURS data
  2. Calculates the length of wav files

  **Required arguments**.

  * **raw_data_dir**: specify the workspace folder where all audio files will be stored.

  Note that you can customize any part of this config either directly or from command-line.

  **Output format**

  This config generates output manifest files:

  * ``${raw_data_dir}/result`` - dev subset of the data.

  Output manifest contains the following keys:

  * **audio_filepath (str)**: relative path to the audio files.
  * **text (str)**: transcription (lower-case without punctuation).
  * **duration (float)**: audio duration in seconds.
processors_to_run: all
raw_data_dir: ???
data_split: dev
output_dir: ${raw_data_dir}/result

processors:
  # Getting data for Armenian dev set
  - _target_: ray_curator.stages.audio.datasets.fleurs.create_initial_manifest.CreateInitialManifestFleursStage
    lang: "hy_am"
    split: ${data_split}
    raw_data_dir: ${raw_data_dir}
    _batch_size: 4

  - _target_: ray_curator.stages.audio.inference.asr_nemo.InferenceAsrNemoStage
    model_name: nvidia/stt_hy_fastconformer_hybrid_large_pc
    _resources:
      _target_: ray_curator.stages.resources.Resources
      gpus: 1.0

  - _target_: ray_curator.stages.audio.metrics.get_wer.GetPairwiseWerStage
    text_key: "text"
    pred_text_key: "pred_text"
    wer_key: "wer"

  - _target_: ray_curator.stages.audio.common.GetAudioDurationStage
    audio_filepath_key: audio_filepath
    duration_key: duration

  - _target_: ray_curator.stages.audio.common.PreserveByValueStage
    input_value_key: "wer"
    target_value: 75.
    operator: "le"

  - _target_: ray_curator.stages.audio.io.convert.AudioToDocumentStage

  - _target_: ray_curator.stages.text.io.writer.JsonlWriter
    path: ${output_dir}
    write_kwargs:
      "force_ascii": False
